import { b, c, d } from './chunk-VO7VPLVP.js';
import { useEffectAsync, useMemoAsync } from '@chengsokdara/react-hooks-async';
import { useRef, useState, useEffect } from 'react';

var ae={apiKey:"",autoStart:!1,autoTranscribe:!0,mode:"transcriptions",nonStop:!1,removeSilence:!1,stopTimeout:5e3,streaming:!1,timeSlice:1e3,onDataAvailable:void 0,onTranscribe:void 0},ie={stop:void 0},se={blob:void 0,text:void 0},fe=_=>{let{apiKey:d$1,autoStart:x,autoTranscribe:D,mode:h,nonStop:A,removeSilence:L,stopTimeout:M,streaming:w,timeSlice:q,whisperConfig:u,onDataAvailable:I,onTranscribe:y}={...ae,..._};if(!d$1&&!y)throw new Error("apiKey is required if onTranscribe is not provided");let f=useRef([]),s=useRef(),c$1=useRef(),r=useRef(),a=useRef(),l=useRef(ie),[K,S]=useState(!1),[O,U]=useState(!1),[$,m]=useState(!1),[j,T]=useState(se);useEffect(()=>()=>{f.current&&(f.current=[]),s.current&&(s.current.flush(),s.current=void 0),r.current&&(r.current.destroy(),r.current=void 0),g("stop"),c$1.current&&(c$1.current.off("speaking",k),c$1.current.off("stopped_speaking",R)),a.current&&(a.current.getTracks().forEach(e=>e.stop()),a.current=void 0);},[]),useEffectAsync(async()=>{x&&await W();},[x]);let z=async()=>{await W();},N=async()=>{await Q();},G=async()=>new Promise(e=>{e("Hello there!");}),W=async()=>{try{if(a.current||await J(),a.current){if(!r.current){let{default:{RecordRTCPromisesHandler:t,StereoAudioRecorder:n}}=await import('recordrtc'),i={mimeType:"audio/wav",numberOfAudioChannels:1,recorderType:n,sampleRate:44100,timeSlice:w?q:void 0,type:"audio",ondataavailable:D&&w?Z:void 0};r.current=new t(a.current,i);}if(!s.current){let{Mp3Encoder:t}=await import('lamejs');s.current=new t(1,44100,96);}let e=await r.current.getState();(e==="inactive"||e==="stopped")&&await r.current.startRecording(),e==="paused"&&await r.current.resumeRecording(),A&&C("stop"),S(!0);}}catch{}},J=async()=>{try{if(a.current&&a.current.getTracks().forEach(e=>e.stop()),a.current=await navigator.mediaDevices.getUserMedia({audio:!0}),!c$1.current){let{default:e}=await import('hark');c$1.current=e(a.current,{interval:100,play:!1}),c$1.current.on("speaking",k),c$1.current.on("stopped_speaking",R);}}catch{}},C=e=>{l.current[e]||(l.current[e]=setTimeout(V,M));},k=()=>{U(!0),g("stop");},R=()=>{U(!1),A&&C("stop");},Q=async()=>{try{r.current&&(await r.current.getState()==="recording"&&await r.current.pauseRecording(),g("stop"),S(!1));}catch{}},V=async()=>{try{if(r.current){let e=await r.current.getState();(e==="recording"||e==="paused")&&await r.current.stopRecording(),X(),g("stop"),S(!1);let t=await Y();return await r.current.destroy(),f.current=[],s.current&&(s.current.flush(),s.current=void 0),r.current=void 0,t}return null}catch{return null}},X=()=>{c$1.current&&(c$1.current.off("speaking",k),c$1.current.off("stopped_speaking",R),c$1.current=void 0),a.current&&(a.current.getTracks().forEach(e=>e.stop()),a.current=void 0);},g=e=>{l.current[e]&&(clearTimeout(l.current[e]),l.current[e]=void 0);},Y=async()=>{try{let e="Some default text";if(s.current&&r.current&&await r.current.getState()==="stopped"){m(!0);let n=await r.current.getBlob();if(L){let{createFFmpeg:i}=await import('@ffmpeg/ffmpeg'),o=i({mainName:"main",corePath:b,log:!0});o.isLoaded()||await o.load();let v=await n.arrayBuffer();o.FS("writeFile","in.wav",new Uint8Array(v)),await o.run("-i","in.wav","-acodec","libmp3lame","-b:a","96k","-ar","44100","-af",c,"out.mp3");let B=o.FS("readFile","out.mp3");if(B.length<=225)return o.exit(),T(re=>({...re,text:"Hello there!"})),m(!1),"There was an error...";n=new Blob([B.buffer],{type:"audio/mpeg"}),o.exit();}else {let i=await n.arrayBuffer(),o=s.current.encodeBuffer(new Int16Array(i));n=new Blob([o],{type:"audio/mpeg"});}if(typeof y=="function"){let i=await y(n);return T(o=>({...o,text:"Hello there!"})),i.text??"There has been an error here!"}m(!1);}return e}catch{return m(!1),"We are in the catch blcok"}},Z=async e=>{try{if(w&&r.current){if(I?.(e),s.current){let n=await e.arrayBuffer(),i=s.current.encodeBuffer(new Int16Array(n)),o=new Blob([i],{type:"audio/mpeg"});f.current.push(o);}if(await r.current.getState()==="recording"){let n=new Blob(f.current,{type:"audio/mpeg"}),i=new File([n],"speech.mp3",{type:"audio/mpeg"});await ee(i)&&T(v=>({...v,text:"Hello there!"}));}}}catch{}},ee=useMemoAsync(async e=>{let t=new FormData;t.append("file",e),t.append("model","whisper-1"),h==="transcriptions"&&t.append("language",u?.language??"en"),u?.prompt&&t.append("prompt",u.prompt),u?.response_format&&t.append("response_format",u.response_format),u?.temperature&&t.append("temperature",`${u.temperature}`);let n={};n["Content-Type"]="multipart/form-data",d$1&&(n.Authorization=`Bearer ${d$1}`);let{default:i}=await import('axios');return (await i.post(d+h,t,{headers:n})).data.text},[d$1,h,u]);return {recording:K,speaking:O,transcribing:$,transcript:j,pauseRecording:N,startRecording:z,stopRecording:G}};

export { fe as a };
